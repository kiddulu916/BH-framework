"""
Vulnerability repositories.

This module provides the VulnerabilityRepository and VulnerabilityFindingRepository
classes which handle all database operations related to vulnerabilities.
"""

from typing import List, Optional
from uuid import UUID

from sqlalchemy.ext.asyncio import AsyncSession

from ..models.vulnerability import Vulnerability, VulnerabilityFinding, VulnerabilitySeverity, VulnerabilityStatus
from .base import BaseRepository


class VulnerabilityRepository(BaseRepository):
    """Repository for Vulnerability model operations."""
    
    def __init__(self, session: AsyncSession):
        super().__init__(session, Vulnerability)
    
    async def get_by_target(self, target_id: UUID) -> List[Vulnerability]:
        """Get all vulnerability results for a target."""
        return await self.list(filters={'target_id': target_id}, order_by=['created_at'])
    
    async def get_by_execution_id(self, execution_id: str) -> Optional[Vulnerability]:
        """Get vulnerability result by execution ID."""
        return await self.find_one({'execution_id': execution_id})


class VulnerabilityFindingRepository(BaseRepository):
    """Repository for VulnerabilityFinding model operations."""
    
    def __init__(self, session: AsyncSession):
        super().__init__(session, VulnerabilityFinding)
    
    async def get_by_vulnerability(self, vulnerability_id: UUID) -> List[VulnerabilityFinding]:
        """Get all findings for a vulnerability result."""
        return await self.list(filters={'vulnerability_id': vulnerability_id}, order_by=['created_at'])
    
    async def get_by_severity(self, severity: VulnerabilitySeverity) -> List[VulnerabilityFinding]:
        """Get all findings by severity."""
        return await self.list(filters={'severity': severity}, order_by=['created_at'])
    
    async def get_by_status(self, status: VulnerabilityStatus) -> List[VulnerabilityFinding]:
        """Get all findings by status."""
        return await self.list(filters={'status': status}, order_by=['created_at'])
    
    async def get_verified_findings(self) -> List[VulnerabilityFinding]:
        """Get all verified findings."""
        return await self.list(filters={'is_verified': True}, order_by=['created_at'])
    
    async def get_critical_and_high_findings(self) -> List[VulnerabilityFinding]:
        """Get all critical and high severity findings."""
        return await self.list(
            filters={'severity': [VulnerabilitySeverity.CRITICAL, VulnerabilitySeverity.HIGH]},
            order_by=['created_at']
        ) 