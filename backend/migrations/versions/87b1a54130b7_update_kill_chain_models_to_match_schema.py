"""Update kill chain models to match schema

Revision ID: 87b1a54130b7
Revises: 6855efdcd1a8
Create Date: 2025-06-29 19:16:57.183041

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '87b1a54130b7'
down_revision: Union[str, Sequence[str], None] = '6855efdcd1a8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Add new columns to attack_paths table
    op.add_column('attack_paths', sa.Column('attack_path_type', sa.String(length=100), nullable=True))
    op.add_column('attack_paths', sa.Column('severity', sa.String(length=50), nullable=True))
    op.add_column('attack_paths', sa.Column('stages', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('attack_paths', sa.Column('prerequisites', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('attack_paths', sa.Column('tools_required', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('attack_paths', sa.Column('evidence', sa.Text(), nullable=True))
    op.add_column('attack_paths', sa.Column('proof_of_concept', sa.Text(), nullable=True))
    op.add_column('attack_paths', sa.Column('screenshots', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('attack_paths', sa.Column('impact_assessment', sa.Text(), nullable=True))
    op.add_column('attack_paths', sa.Column('remediation', sa.Text(), nullable=True))
    op.add_column('attack_paths', sa.Column('attack_path_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    
    # Add new columns to kill_chains table
    op.add_column('kill_chains', sa.Column('critical_paths', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('kill_chains', sa.Column('high_paths', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('kill_chains', sa.Column('medium_paths', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('kill_chains', sa.Column('low_paths', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('kill_chains', sa.Column('info_paths', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('kill_chains', sa.Column('analysis_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('kill_chains', sa.Column('raw_output', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('kill_chains', sa.Column('kill_chain_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    
    # Modify existing columns in kill_chains table
    op.alter_column('kill_chains', 'execution_id',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('kill_chains', 'execution_time',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Float(),
               existing_nullable=True,
               postgresql_using="execution_time::double precision")
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Remove columns from kill_chains table
    op.drop_column('kill_chains', 'kill_chain_metadata')
    op.drop_column('kill_chains', 'raw_output')
    op.drop_column('kill_chains', 'analysis_config')
    op.drop_column('kill_chains', 'info_paths')
    op.drop_column('kill_chains', 'low_paths')
    op.drop_column('kill_chains', 'medium_paths')
    op.drop_column('kill_chains', 'high_paths')
    op.drop_column('kill_chains', 'critical_paths')
    
    # Restore execution_time column type
    op.alter_column('kill_chains', 'execution_time',
               existing_type=sa.Float(),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True,
               postgresql_using="execution_time::text")
    
    # Restore execution_id column constraint
    op.alter_column('kill_chains', 'execution_id',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    
    # Remove columns from attack_paths table
    op.drop_column('attack_paths', 'attack_path_metadata')
    op.drop_column('attack_paths', 'remediation')
    op.drop_column('attack_paths', 'impact_assessment')
    op.drop_column('attack_paths', 'screenshots')
    op.drop_column('attack_paths', 'proof_of_concept')
    op.drop_column('attack_paths', 'evidence')
    op.drop_column('attack_paths', 'tools_required')
    op.drop_column('attack_paths', 'prerequisites')
    op.drop_column('attack_paths', 'stages')
    op.drop_column('attack_paths', 'severity')
    op.drop_column('attack_paths', 'attack_path_type')
    
    # ### end Alembic commands ###
