# Passive Recon Stage .env
#
# Usage:
# 1. Generate a new BACKEND_JWT_TOKEN for API submission:
#    python stages/utils/generate_jwt.py --sub passive_recon_stage
# 2. Rotate JWT_SECRET and update BACKEND_JWT_TOKEN:
#    python stages/utils/rotate_jwt_secret.py --sub passive_recon_stage
#
# All tool runners save raw output to /outputs/passive_recon/<TARGET>/<TOOL>.*
# Parsed data is saved to /outputs/passive_recon/<TARGET>/parsed/<TOOL>_subdomains.json (or similar)
# Both raw and parsed outputs are submitted to the backend API using BACKEND_JWT_TOKEN
#
BACKEND_API_URL=http://backend:8000/api/v1/results/passive-recon
BACKEND_JWT_TOKEN=  # Set by generate_jwt.py or rotate_jwt_secret.py
JWT_SECRET=         # Set by rotate_jwt_secret.py (must match backend)
JWT_ALGORITHM=HS256

# Tool paths (update if installed elsewhere)
AMASS_PATH=/usr/bin/amass
SUBFINDER_PATH=/usr/local/bin/subfinder
ASSETFINDER_PATH=/usr/local/bin/assetfinder
GAU_PATH=/usr/local/bin/gau
SUBLIST3R_PATH=~/Sublist3r/sublist3r.py
CERO_PATH=/root/go/bin/cero
GO_PATH=~/go/bin/

# Wordlists
SECLISTS_PATH=/usr/share/wordlists/seclists/

# Environment Variables PATH
PATH="~/go/bin/:~/Sublist3r/:$PATH"

