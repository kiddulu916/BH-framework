# Passive Recon Stage .env
#
# Usage:
# 1. Generate a new BACKEND_JWT_TOKEN for API submission:
#    python stages/utils/generate_jwt.py --sub passive_recon_stage
# 2. Rotate JWT_SECRET and update BACKEND_JWT_TOKEN:
#    python stages/utils/rotate_jwt_secret.py --sub passive_recon_stage
#
# All tool runners save raw output to /outputs/<TARGET>/raw/<TOOL>.*
# Parsed data is saved to /outputs/<TARGET>/parsed/<TOOL>_subdomains.txt (or similar)
# Both raw and parsed outputs are submitted to the backend API using BACKEND_JWT_TOKEN
#
BACKEND_API_URL=http://backend:8000/api/results/passive-recon
BACKEND_JWT_TOKEN=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJwYXNzaXZlX3JlY29uX3N0YWdlIiwiaWF0IjoxNzUyNjUxNzQ0LCJleHAiOjE3NTI2NTUzNDR9.w7Xzf9jtQWGXEnlCkCJM_zX8VKbMpNfky3SOhhIF8CM
JWT_SECRET=8e3e62baa4f63f6baca9cd090a1ae84507d0f0de684042645224bc57e91f25644b1422250dc6a9b39a4e9be8f99d561374aee03fad36e4cb0429bdfd13afde3d
JWT_ALGORITHM=HS256

# Tool paths (update if installed elsewhere)
AMASS_PATH=/root/go/bin/amass
SUBFINDER_PATH=/root/go/bin/subfinder
ASSETFINDER_PATH=/root/go/bin/assetfinder
GAU_PATH=/root/go/bin/gau
SUBLIST3R_PATH=/opt/Sublist3r/sublist3r.py
TRUFFLEHOG_PATH=/usr/local/bin/trufflehog
GO_PATH=/root/go/bin/

# Wordlists
SECLISTS_PATH=/usr/share/wordlists/seclists/

# Environment Variables PATH
PATH="/root/go/bin/:/opt/Sublist3r/:/usr/local/bin:/root/.local/bin:/usr/bin:/usr/.local/bin:$PATH"

